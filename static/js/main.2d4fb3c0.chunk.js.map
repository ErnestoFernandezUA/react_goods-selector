{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectHandler","good","includes","setState","prevState","removeHandler","i","findIndex","item","splice","console","log","displaySelectedGoods","length","result","push","join","clearSelected","this","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,SACA,OACA,QACA,UACA,UAOIC,E,4MACJC,MAAe,CACbC,aAAc,I,EAGhBC,cAAgB,SAACC,GACV,EAAKH,MAAMC,aAAaG,SAASD,IACpC,EAAKE,UAAS,SAACC,GAAD,MAAgB,CAC5BL,aAAa,GAAD,mBACPK,EAAUL,cADH,CAEVE,S,EAMRI,cAAgB,SAACJ,GACf,IAAMK,EAAI,EAAKR,MAAMC,aAAaQ,WAAU,SAAAC,GAAI,OAAIA,IAASP,KAE7D,EAAKH,MAAMC,aAAaU,OAAOH,EAAG,GAElCI,QAAQC,IAAIL,GAEZ,EAAKH,UAAS,SAACC,GAAD,MAAgB,CAC5BL,aAAa,YACRK,EAAUL,mB,EAKnBa,qBAAuB,WACrB,GAAuC,IAAnC,EAAKd,MAAMC,aAAac,OAC1B,MAAO,oBAGT,GAAuC,IAAnC,EAAKf,MAAMC,aAAac,OAC1B,MAAM,GAAN,OAAU,EAAKf,MAAMC,aAAa,GAAlC,gBAKF,IAFA,IAAMe,EAAS,GAENR,EAAI,EAAGA,EAAI,EAAKR,MAAMC,aAAac,OAAQP,GAAK,EACvD,OAAQA,GACN,KAAM,EAAKR,MAAMC,aAAac,OAAS,EACrCC,EAAOC,KAAP,UAAe,EAAKjB,MAAMC,aAAaO,GAAvC,mBACA,MAEF,KAAM,EAAKR,MAAMC,aAAac,OAAS,EACrCC,EAAOC,KAAP,UAAe,EAAKjB,MAAMC,aAAaO,GAAvC,UACA,MAEF,QACEQ,EAAOC,KAAP,UAAe,EAAKjB,MAAMC,aAAaO,GAAvC,OAIN,OAAOQ,EAAOE,KAAK,K,EAGrBC,cAAgB,WACd,EAAKd,SAAS,CAAEJ,aAAc,M,4CAGhC,WAAU,IAAD,OACCA,EAAiBmB,KAAKpB,MAAtBC,aAER,OACE,sBAAKoB,UAAU,MAAf,UACE,+BACGD,KAAKN,uBACJM,KAAKpB,MAAMC,aAAac,OAAS,GACjC,wBACEO,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKJ,iBAJT,kBAWJ,sCACMlB,EAAac,OADnB,iBACkCjB,EAAgBiB,UAElD,6BACGjB,EAAgB0B,KAAI,SAAArB,GAAI,OACvB,gCACI,EAAKH,MAAMC,aAAaG,SAASD,IAEjC,wBACEmB,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKrB,cAAcC,IAJvB,iBAUDA,EACA,EAAKH,MAAMC,aAAaG,SAASD,IAEhC,wBACEmB,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKhB,cAAcJ,IAJvB,sBAhBKA,e,GAvFHsB,IAAMC,WA0HT3B,IC/If4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d4fb3c0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n  'plov',\n  'borsh',\n  'kotleta',\n  'oladki',\n];\n\ntype State = {\n  selectedGood: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: [],\n  };\n\n  selectHandler = (good: string) => {\n    if (!this.state.selectedGood.includes(good)) {\n      this.setState((prevState) => ({\n        selectedGood: [\n          ...prevState.selectedGood,\n          good,\n        ],\n      }));\n    }\n  };\n\n  removeHandler = (good: string) => {\n    const i = this.state.selectedGood.findIndex(item => item === good);\n\n    this.state.selectedGood.splice(i, 1);\n    // eslint-disable-next-line no-console\n    console.log(i);\n\n    this.setState((prevState) => ({\n      selectedGood: [\n        ...prevState.selectedGood,\n      ],\n    }));\n  };\n\n  displaySelectedGoods = () => {\n    if (this.state.selectedGood.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (this.state.selectedGood.length === 1) {\n      return `${this.state.selectedGood[0]} is selected`;\n    }\n\n    const result = [];\n\n    for (let i = 0; i < this.state.selectedGood.length; i += 1) {\n      switch (i) {\n        case (this.state.selectedGood.length - 1):\n          result.push(`${this.state.selectedGood[i]} are selected.`);\n          break;\n\n        case (this.state.selectedGood.length - 2):\n          result.push(`${this.state.selectedGood[i]} and `);\n          break;\n\n        default:\n          result.push(`${this.state.selectedGood[i]}, `);\n      }\n    }\n\n    return result.join('');\n  };\n\n  clearSelected = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.displaySelectedGoods()}\n          {(this.state.selectedGood.length > 0) && (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                this.clearSelected();\n              }}\n            >\n              X\n            </button>\n          )}\n        </h1>\n        <p>\n          {`${selectedGood.length} from ${goodsFromServer.length}`}\n        </p>\n        <ul>\n          {goodsFromServer.map(good => (\n            <li key={good}>\n              {!this.state.selectedGood.includes(good)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    this.selectHandler(good);\n                  }}\n                >\n                  Add\n                </button>\n              )}\n              {good}\n              {this.state.selectedGood.includes(good)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    this.removeHandler(good);\n                  }}\n                >\n                  Remove\n                </button>\n              )}\n\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}