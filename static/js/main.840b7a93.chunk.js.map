{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectHandler","good","setState","prevState","removeHandler","filter","item","displaySelectedGoods","selectedGoods","length","last","pop","join","clearSelected","this","className","type","onClick","map","includes","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,aAAc,I,EAGhBC,cAAgB,SAACC,GACf,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,aAAa,GAAD,mBACPI,EAAUJ,cADH,CAEVE,S,EAKNG,cAAgB,SAACH,GACf,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,aAAa,YACRI,EAAUJ,aAAaM,QAAO,SAAAC,GAAI,OAAIA,IAASL,W,EAKxDM,qBAAuB,WACrB,IAAMC,EAAa,YAAO,EAAKV,MAAMC,cAErC,OAAQS,EAAcC,QACpB,KAAM,EACJ,MAAO,oBAET,KAAM,EACJ,MAAM,GAAN,OAAUD,EAAc,GAAxB,gBAEF,QAEE,IAAME,EAAOF,EAAcG,MAE3B,MAAM,GAAN,OAAUH,EAAcI,KAAK,MAA7B,gBAA0CF,EAA1C,oB,EAKNG,cAAgB,WACd,EAAKX,SAAS,CAAEH,aAAc,M,4CAGhC,WAAU,IAAD,OACCA,EAAiBe,KAAKhB,MAAtBC,aAER,OACE,sBAAKgB,UAAU,MAAf,UACE,+BACGD,KAAKP,uBACJR,EAAaU,OAAS,GACtB,wBACEO,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKJ,iBAJT,kBAWJ,sCACMd,EAAaU,OADnB,iBACkCb,EAAgBa,UAElD,6BACGb,EAAgBsB,KAAI,SAAAjB,GAAI,OACvB,gCACIF,EAAaoB,SAASlB,IAEtB,wBACEe,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKjB,cAAcC,IAJvB,iBAUF,sBACEc,UAAWK,IAAW,GAAI,CAAErB,aAAcA,EAAaoB,SAASlB,KADlE,SAGGA,IAEFF,EAAaoB,SAASlB,IAErB,wBACEe,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKb,cAAcH,IAJvB,sBApBKA,e,GArEHoB,IAAMC,WA4GTzB,IC9Hf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.840b7a93.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: [],\n  };\n\n  selectHandler = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGood: [\n        ...prevState.selectedGood,\n        good,\n      ],\n    }));\n  };\n\n  removeHandler = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGood: [\n        ...prevState.selectedGood.filter(item => item !== good),\n      ],\n    }));\n  };\n\n  displaySelectedGoods = () => {\n    const selectedGoods = [...this.state.selectedGood];\n\n    switch (selectedGoods.length) {\n      case (0):\n        return 'No goods selected';\n\n      case (1):\n        return `${selectedGoods[0]} is selected`;\n\n      default:\n      {\n        const last = selectedGoods.pop();\n\n        return `${selectedGoods.join(', ')} and ${last} are selected.`;\n      }\n    }\n  };\n\n  clearSelected = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.displaySelectedGoods()}\n          {(selectedGood.length > 0) && (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                this.clearSelected();\n              }}\n            >\n              X\n            </button>\n          )}\n        </h1>\n        <p>\n          {`${selectedGood.length} from ${goodsFromServer.length}`}\n        </p>\n        <ul>\n          {goodsFromServer.map(good => (\n            <li key={good}>\n              {!selectedGood.includes(good)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    this.selectHandler(good);\n                  }}\n                >\n                  Add\n                </button>\n              )}\n              <span\n                className={classNames('', { selectedGood: selectedGood.includes(good) })}\n              >\n                {good}\n              </span>\n              {selectedGood.includes(good)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    this.removeHandler(good);\n                  }}\n                >\n                  Remove\n                </button>\n              )}\n\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}